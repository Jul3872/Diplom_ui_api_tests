"""–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ä–∞–∑–¥–µ–ª–µ –ú–µ–¥–∏–∞"""
from selenium.webdriver.common.by import By
from .base_page import BasePage
from config.environment import EnvironmentConfig
from config.test_data import TestData
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import allure


class MediaNewsPage(BasePage):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–µ–π"""

    # –õ–æ–∫–∞—Ç–æ—Ä—ã
    NEWS_ARTICLES = (By.XPATH, "//article | //div[contains(@class, "
                     "'news-item')] | //div[contains(@class, 'article')]")
    NEWS_TITLE = (By.XPATH, "//h1[contains(text(), '–ù–æ–≤–æ—Å—Ç–∏')] | //h1[contains"
                  "(text(), 'News')]")
    DATE_ELEMENTS = (By.XPATH, "//*[contains(@class, 'date')] | //time | //*"
                     "[contains(text(), '202')]")

    def __init__(self, driver):
        print("üé¨ –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MediaNewsPage...")
        super().__init__(driver)
        print(f"üåê –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {EnvironmentConfig.MEDIA_NEWS_URL}")
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞–ø—Ä—è–º—É—é
        self.driver.get(EnvironmentConfig.MEDIA_NEWS_URL)
        print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞. –¢–µ–∫—É—â–∏–π URL: {self.driver.current_url}")
        print(f"üìñ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {self.driver.title}")

    @allure.step("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    def is_correct_title(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        page_title = self.get_page_title()
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞: '{page_title}'")
        expected_title = TestData.UI.MEDIA_NEWS_TITLE
        print(f"üîç –û–∂–∏–¥–∞–µ–º—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: '{expected_title}'")

        result = page_title == expected_title
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {result}")
        return result

    @allure.step("–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π")
    def get_news_articles_count(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
        try:
            articles = self.find_elements(*self.NEWS_ARTICLES, timeout=10)
            count = len(articles)
            print(f"üì∞ –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {count}")
            return count
        except TimeoutException:
            print("‚ö† –ù–æ–≤–æ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return 0

    @allure.step("–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –¥–∞—Ç–∞–º–∏")
    def get_date_elements_count(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –¥–∞—Ç–∞–º–∏"""
        try:
            dates = self.find_elements(*self.DATE_ELEMENTS, timeout=10)
            count = len(dates)
            print(f"üìÖ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –¥–∞—Ç–∞–º–∏: {count}")
            return count
        except TimeoutException:
            print("‚ö† –≠–ª–µ–º–µ–Ω—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return 0

    @allure.step("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å URL")
    def is_correct_url(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å URL"""
        current_url = self.get_current_url().lower()
        print(f"üåê –¢–µ–∫—É—â–∏–π URL: {current_url}")
        is_correct = any(keyword in current_url for keyword in [
            "news", "–Ω–æ–≤–æ—Å—Ç–∏", "media"])
        print(f"üåê URL –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {is_correct}")
        return is_correct

    @allure.step("–û–∂–∏–¥–∞—Ç—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    def wait_for_full_page_load(self, timeout=30):
        """–û–∂–∏–¥–∞—Ç—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")

        # –ñ–¥–µ–º –∫–æ–≥–¥–∞ document.readyState –±—É–¥–µ—Ç complete
        self.wait.until(lambda driver: driver.execute_script(
            "return document.readyState") == "complete")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∂–¥–µ–º –∫–æ–≥–¥–∞ –∏—Å—á–µ–∑–Ω—É—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏
        loading_indicators = [
            "//div[contains(@class, 'loading')]",
            "//div[contains(@class, 'spinner')]",
            "//div[contains(@class, 'progress')]"
        ]

        for indicator in loading_indicators:
            try:
                # –ñ–¥–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏
                WebDriverWait(self.driver, 5).until(
                    EC.invisibility_of_element_located((By.XPATH, indicator))
                )
            except Exception:
                pass  # –ï—Å–ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–µ—Ç - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ

        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
