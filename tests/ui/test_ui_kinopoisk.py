"""UI —Ç–µ—Å—Ç—ã –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Page Object Model"""
from config.test_data import TestData
import allure


class TestKinopoiskUI:
    """–í—Å–µ UI —Ç–µ—Å—Ç—ã –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞"""

    @allure.step("–¢–µ—Å—Ç 1: –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π - –ø–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∏–ª—å–º–∞")
    def test_search_negative_scenario(self, main_page):
        """–¢–µ—Å—Ç 1: –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π - –ø–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∏–ª—å–º–∞"""
        print("\nüîç UI –¢–µ—Å—Ç 1: –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–∏—Å–∫–∞")

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∏–ª—å–º–∞
        search_page = main_page.search_for_film(
            TestData.UI.SEARCH_NEGATIVE_QUERY)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        assert search_page.is_no_results_message_displayed(), "–°–æ–æ–±—â–µ–Ω–∏–µ "
        "–æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

    @allure.step("–¢–µ—Å—Ç 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤: —Å—Ç—Ä–∞–Ω–∞, –≥–æ–¥")
    def test_advanced_search_filters(self, main_page):
        """–¢–µ—Å—Ç 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤: —Å—Ç—Ä–∞–Ω–∞, –≥–æ–¥"""
        print("\nüéØ UI –¢–µ—Å—Ç 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏")

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
        advanced_search_page = main_page.click_advanced_search()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        filters = TestData.UI.ADVANCED_SEARCH_FILTERS
        advanced_search_page.set_year_filter(filters['year_from'], filters[
            'year_to'])
        advanced_search_page.set_country_filter(filters['country'])

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        search_page = advanced_search_page.apply_filters()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        assert (search_page.are_results_displayed() or
                search_page.is_no_results_message_displayed()
                ), "–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏"
        print("‚úÖ –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")

    @allure.step("–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è)")
    def test_search_film_by_name_working(self, main_page):
        """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è)"""
        print("\nüé¨ UI –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è)")

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Ä–∞–±–æ—á–∏–π –º–µ—Ç–æ–¥
        film_page = main_page.search_for_film_with_dropdown(
            TestData.UI.SEARCH_FILM_NAME)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ñ–∏–ª—å–º–∞
        current_url = film_page.get_current_url().lower()
        assert "/film/" in current_url, (
            f"–ù–µ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–∏–ª—å–º–∞. –¢–µ–∫—É—â–∏–π URL: {current_url}")
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–∏–ª—å–º–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        page_title = film_page.get_film_title().lower()
        assert TestData.UI.SEARCH_FILM_NAME.lower() in page_title, (
            f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ: {page_title}")
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: "
              f"{film_page.get_film_title()}")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ–∏–ª—å–º–∞
        film_title = film_page.get_film_title()
        if film_title:
            print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {film_title}")

    @allure.step("–¢–µ—Å—Ç 4: –†–∞–∑–¥–µ–ª –ù–æ–≤–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –ú–µ–¥–∏–∞")
    def test_media_news_section(self, media_news_page):
        """–¢–µ—Å—Ç 4: –†–∞–∑–¥–µ–ª –ù–æ–≤–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –ú–µ–¥–∏–∞"""
        print("\nüì∞ UI –¢–µ—Å—Ç 4: –†–∞–∑–¥–µ–ª –ù–æ–≤–æ—Å—Ç–∏ –≤ –ú–µ–¥–∏–∞")

        try:
            # –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            media_news_page.wait_for_full_page_load()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            assert media_news_page.is_correct_title(), "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "
            "–Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É"
            print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            assert media_news_page.is_correct_url(), "URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ "
            "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–æ–≤–æ—Å—Ç–µ–π"
            print("‚úÖ URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
            print("üîç –ò—â–µ–º –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏...")
            articles_count = media_news_page.get_news_articles_count()
            assert articles_count > 0, "–ù–æ–≤–æ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {articles_count}")

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–∞–ª–∏—á–∏–µ –¥–∞—Ç —É –Ω–æ–≤–æ—Å—Ç–µ–π
            print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞—Ç —É –Ω–æ–≤–æ—Å—Ç–µ–π...")
            dates_count = media_news_page.get_date_elements_count()
            if dates_count > 0:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –¥–∞—Ç–∞–º–∏: {dates_count}")
            else:
                print("‚ö† –≠–ª–µ–º–µ–Ω—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

            print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–æ–≤–æ—Å—Ç–µ–π –ø—Ä–æ–π–¥–µ–Ω—ã!")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            media_news_page.driver.save_screenshot("media_news_error.png")
            print("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: media_news_error.png")
            raise

    @allure.step("–¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    def test_main_page_elements(self, main_page):
        """–¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        print("\nüè† UI –¢–µ—Å—Ç 5: –≠–ª–µ–º–µ–Ω—Ç—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")

        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞
        assert main_page.is_logo_displayed(), "–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
        print("‚úÖ –õ–æ–≥–æ—Ç–∏–ø –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")

        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
        assert main_page.is_search_field_displayed(), "–ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ "
        "–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
        print("‚úÖ –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–µ–Ω—é
        assert main_page.is_navigation_menu_displayed(), "–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ "
        "–º–µ–Ω—é –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
        found_items = main_page.verify_navigation_menu_items()
        assert len(found_items) >= 3, (
            f"–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é –Ω–∞–π–¥–µ–Ω–æ: {len(found_items)}")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é: {len(found_items)}/"
              f"{len(TestData.UI.NAV_MENU_ITEMS)}")

        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É—Ç–µ—Ä–∞
        assert main_page.is_footer_displayed(), "–§—É—Ç–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
        links_count = main_page.get_footer_links_count()
        assert links_count > 0, "–í —Ñ—É—Ç–µ—Ä–µ –Ω–µ—Ç —Å—Å—ã–ª–æ–∫"
        print(f"‚úÖ –§—É—Ç–µ—Ä –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {links_count}")

        print("‚úÖ –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!")
